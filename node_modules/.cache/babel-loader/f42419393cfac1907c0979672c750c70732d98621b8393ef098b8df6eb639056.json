{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    products: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      productColumns: [] // Array to store product columns\n    };\n  },\n  mounted() {\n    this.splitProductsIntoColumns();\n  },\n  methods: {\n    addToCart(product) {\n      this.$emit(\"add-to-cart\", product);\n    },\n    splitProductsIntoColumns() {\n      const productsCopy = [...this.products];\n      const numColumns = 2;\n      const productsPerColumn = Math.ceil(this.products.length / numColumns);\n      for (let i = 0; i < numColumns; i++) {\n        this.productColumns.push(productsCopy.splice(0, productsPerColumn));\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","products","type","Array","required","data","productColumns","mounted","splitProductsIntoColumns","methods","addToCart","product","$emit","productsCopy","numColumns","productsPerColumn","Math","ceil","length","i","push","splice"],"sources":["C:\\Users\\pbana\\activity-3\\src\\components\\ProductList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2 class=\"center\">Products</h2>\r\n    <div class=\"product-columns\">\r\n      <div v-for=\"(column, index) in productColumns\" :key=\"index\" class=\"product-column\">\r\n        <ul class=\"product-list\">\r\n          <li v-for=\"product in column\" :key=\"product.id\" class=\"product-item\">\r\n            <div>{{ product.name }}</div>\r\n            <div>â‚±{{ product.price }}</div>\r\n            <button class=\"add-to-cart-btn\" @click=\"addToCart(product)\">Add to Cart</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    products: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      productColumns: [], // Array to store product columns\r\n    };\r\n  },\r\n  mounted() {\r\n    this.splitProductsIntoColumns();\r\n  },\r\n  methods: {\r\n    addToCart(product) {\r\n      this.$emit(\"add-to-cart\", product);\r\n    },\r\n    splitProductsIntoColumns() {\r\n      const productsCopy = [...this.products];\r\n      const numColumns = 2;\r\n      const productsPerColumn = Math.ceil(this.products.length / numColumns);\r\n      for (let i = 0; i < numColumns; i++) {\r\n        this.productColumns.push(productsCopy.splice(0, productsPerColumn));\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.center {\r\n  text-align: center;\r\n}\r\n\r\n.product-columns {\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\n.product-column {\r\n  flex: 1;\r\n  margin: 1 10px; /* Add margin between columns */\r\n}\r\n\r\n\r\n.product-list {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.product-item {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-to-cart-btn {\r\n  background-color: #ffa500;\r\n  border: none;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":";AAkBA,eAAe;EACbA,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,EAAE,CAAE;IACtB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,wBAAwB,CAAC,CAAC;EACjC,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAACC,OAAO,EAAE;MACjB,IAAI,CAACC,KAAK,CAAC,aAAa,EAAED,OAAO,CAAC;IACpC,CAAC;IACDH,wBAAwBA,CAAA,EAAG;MACzB,MAAMK,YAAW,GAAI,CAAC,GAAG,IAAI,CAACZ,QAAQ,CAAC;MACvC,MAAMa,UAAS,GAAI,CAAC;MACpB,MAAMC,iBAAgB,GAAIC,IAAI,CAACC,IAAI,CAAC,IAAI,CAAChB,QAAQ,CAACiB,MAAK,GAAIJ,UAAU,CAAC;MACtE,KAAK,IAAIK,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIL,UAAU,EAAEK,CAAC,EAAE,EAAE;QACnC,IAAI,CAACb,cAAc,CAACc,IAAI,CAACP,YAAY,CAACQ,MAAM,CAAC,CAAC,EAAEN,iBAAiB,CAAC,CAAC;MACrE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
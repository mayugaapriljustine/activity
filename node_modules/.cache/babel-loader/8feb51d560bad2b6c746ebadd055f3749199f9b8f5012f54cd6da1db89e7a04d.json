{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"cart\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Cart\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TaskItem = _resolveComponent(\"TaskItem\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.cart, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.product.id\n    }, [_createVNode(_component_TaskItem, {\n      item: item,\n      onRemoveFromCart: $options.removeFromCart,\n      onUpdateQuantity: $options.updateQuantity\n    }, null, 8 /* PROPS */, [\"item\", \"onRemoveFromCart\", \"onUpdateQuantity\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$props","cart","item","key","product","id","_createVNode","_component_TaskItem","onRemoveFromCart","$options","removeFromCart","onUpdateQuantity","updateQuantity"],"sources":["C:\\Users\\pbana\\activity-3\\src\\components\\ShoppingCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart\">\r\n    <h2>Cart</h2>\r\n    <div v-for=\"item in cart\" :key=\"item.product.id\">\r\n      <TaskItem :item=\"item\" @remove-from-cart=\"removeFromCart\" @update-quantity=\"updateQuantity\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TaskItem from './TaskItem.vue';\r\n\r\nexport default {\r\n  components: {\r\n    TaskItem\r\n  },\r\n  props: ['cart'],\r\n  methods: {\r\n    removeFromCart(item) {\r\n      this.$emit('remove-from-cart', item);\r\n    },\r\n    updateQuantity(payload) {\r\n      this.$emit('update-quantity', payload);\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAM;gCACfC,mBAAA,CAAa,YAAT,MAAI;;;uBADVC,mBAAA,CAKM,OALNC,UAKM,GAJJC,UAAa,G,kBACbF,mBAAA,CAEMG,SAAA,QALVC,WAAA,CAGwBC,MAAA,CAAAC,IAAI,EAAZC,IAAI;yBAAhBP,mBAAA,CAEM;MAFqBQ,GAAG,EAAED,IAAI,CAACE,OAAO,CAACC;QAC3CC,YAAA,CAA8FC,mBAAA;MAAnFL,IAAI,EAAEA,IAAI;MAAGM,gBAAgB,EAAEC,QAAA,CAAAC,cAAc;MAAGC,gBAAe,EAAEF,QAAA,CAAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
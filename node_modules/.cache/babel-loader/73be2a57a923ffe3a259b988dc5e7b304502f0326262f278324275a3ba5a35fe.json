{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Shopping Cart\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.cart, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, [_createTextVNode(_toDisplayString(item.name) + \" - $\" + _toDisplayString(item.price) + \" - Quantity: \", 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => item.quantity = $event,\n      onChange: $event => $options.updateQuantity(item.id, item.quantity)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2), [[_vModelText, item.quantity]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeFromCart(item.id)\n    }, \"Remove\", 8 /* PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", null, \"Total: $\" + _toDisplayString($options.totalPrice), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$props","cart","item","key","id","_createTextVNode","_toDisplayString","name","price","type","$event","quantity","onChange","$options","updateQuantity","_hoisted_2","onClick","removeFromCart","_hoisted_3","totalPrice"],"sources":["C:\\Users\\pbana\\activity-3\\src\\components\\ShoppingCart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Shopping Cart</h2>\r\n    <ul>\r\n      <li v-for=\"item in cart\" :key=\"item.id\">\r\n        {{ item.name }} - ${{ item.price }} - Quantity:\r\n        <input type=\"number\" v-model=\"item.quantity\" @change=\"updateQuantity(item.id, item.quantity)\">\r\n        <button @click=\"removeFromCart(item.id)\">Remove</button>\r\n      </li>\r\n    </ul>\r\n    <div>Total: ${{ totalPrice }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    cart: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  computed: {\r\n    totalPrice() {\r\n      return this.cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n    },\r\n  },\r\n  methods: {\r\n    removeFromCart(productId) {\r\n      this.$emit(\"remove-from-cart\", productId);\r\n    },\r\n    updateQuantity(productId, quantity) {\r\n      this.$emit(\"update-quantity\", { productId, quantity: parseInt(quantity) });\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":";gCAEIA,mBAAA,CAAsB,YAAlB,eAAa;mBAFrB;mBAAA;;uBACEC,mBAAA,CAUM,cATJC,UAAsB,EACtBF,mBAAA,CAMK,c,kBALHC,mBAAA,CAIKE,SAAA,QARXC,WAAA,CAIyBC,MAAA,CAAAC,IAAI,EAAZC,IAAI;yBAAfN,mBAAA,CAIK;MAJqBO,GAAG,EAAED,IAAI,CAACE;QAJ1CC,gBAAA,CAAAC,gBAAA,CAKWJ,IAAI,CAACK,IAAI,IAAG,MAAI,GAAAD,gBAAA,CAAGJ,IAAI,CAACM,KAAK,IAAG,eACnC,iB,gBAAAb,mBAAA,CAA8F;MAAvFc,IAAI,EAAC,QAAQ;MAN5B,uBAAAC,MAAA,IAMsCR,IAAI,CAACS,QAAQ,GAAAD,MAAA;MAAGE,QAAM,EAAAF,MAAA,IAAEG,QAAA,CAAAC,cAAc,CAACZ,IAAI,CAACE,EAAE,EAAEF,IAAI,CAACS,QAAQ;6CANnGI,UAAA,I,cAMsCb,IAAI,CAACS,QAAQ,E,GAC3ChB,mBAAA,CAAwD;MAA/CqB,OAAK,EAAAN,MAAA,IAAEG,QAAA,CAAAI,cAAc,CAACf,IAAI,CAACE,EAAE;OAAG,QAAM,iBAPvDc,UAAA,E;oCAUIvB,mBAAA,CAAmC,aAA9B,UAAQ,GAAAW,gBAAA,CAAGO,QAAA,CAAAM,UAAU,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}